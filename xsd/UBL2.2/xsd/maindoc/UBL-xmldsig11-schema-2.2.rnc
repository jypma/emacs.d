# Library:           OASIS Universal Business Language (UBL) 2.2 OS
#                    http://docs.oasis-open.org/ubl/os-UBL-2.2/
# Release Date:      09 July 2018
# Module:            UBL-xmldsig11-schema-2.2.xsd
# Generated on:      2016-06-24 19:50(UTC)
# 
# This is a copy of http://www.w3.org/TR/xmldsig-core1/xmldsig11-schema.xsd
# changed only to include this header information.

# #
# # Copyright ©[2011] World Wide Web Consortium 
# # (Massachusetts Institute of Technology,  
# #  European Research Consortium for Informatics and Mathematics, 
# #  Keio University). All Rights Reserved.  
# # This work is distributed under the W3C® Software License [1] in the
# # hope that it will be useful, but WITHOUT ANY WARRANTY; without even
# # the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# # PURPOSE. 
# # [1] http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231
# #

default namespace = "http://www.w3.org/2009/xmldsig11#"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ds = "http://www.w3.org/2000/09/xmldsig#"
namespace dsig11 = "http://www.w3.org/2009/xmldsig11#"
namespace rng = "http://relaxng.org/ns/structure/1.0"

start |= starting_ECKeyValue
starting_ECKeyValue = element ECKeyValue { ECKeyValueType }
ECKeyValueType =
  (element ECParameters { ECParametersType }
   | element NamedCurve { NamedCurveType }),
  element PublicKey { ECPointType },
  attribute Id { ID }?
NamedCurveType = attribute URI { anyURI }
ECPointType = CryptoBinary
ECParametersType =
  element FieldID { FieldIDType },
  element Curve { CurveType },
  element Base { ECPointType },
  element Order { CryptoBinary },
  element CoFactor { integer }?,
  element ValidationData { ECValidationDataType }?
FieldIDType =
  Prime
  | TnB
  | PnB
  | GnB
  | element * { text }
CurveType =
  element A { CryptoBinary },
  element B { CryptoBinary }
ECValidationDataType =
  element seed { CryptoBinary },
  attribute hashAlgorithm { anyURI }
start |= starting_Prime
starting_Prime = element Prime { PrimeFieldParamsType }
PrimeFieldParamsType = element P { CryptoBinary }
start |= starting_GnB
starting_GnB = element GnB { CharTwoFieldParamsType }
CharTwoFieldParamsType = element M { positiveInteger }
start |= starting_TnB
starting_TnB = element TnB { TnBFieldParamsType }
TnBFieldParamsType =
  CharTwoFieldParamsType,
  element K { positiveInteger }
start |= starting_PnB
starting_PnB = element PnB { PnBFieldParamsType }
PnBFieldParamsType =
  CharTwoFieldParamsType,
  element K1 { positiveInteger },
  element K2 { positiveInteger },
  element K3 { positiveInteger }
start |= starting_DEREncodedKeyValue
starting_DEREncodedKeyValue =
  element DEREncodedKeyValue { DEREncodedKeyValueType }
DEREncodedKeyValueType =
  base64Binary,
  attribute Id { ID }?
start |= starting_KeyInfoReference
starting_KeyInfoReference =
  element KeyInfoReference { KeyInfoReferenceType }
KeyInfoReferenceType =
  attribute URI { anyURI },
  attribute Id { ID }?
start |= starting_X509Digest
starting_X509Digest = element X509Digest { X509DigestType }
X509DigestType =
  base64Binary,
  attribute Algorithm { anyURI }
